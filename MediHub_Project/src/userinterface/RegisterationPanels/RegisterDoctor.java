/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.RegisterationPanels;

import Business.EcoSystem;
import Business.Employee.Employee;
import Business.Enterprise.*;
import Business.Network.Network;
import Business.Organization.DoctorOrganization;
import Business.Organization.LabOrganization;
import Business.Organization.Organization;
import static Business.Organization.Organization.Type.Doctor;
import Business.Organization.OrganizationDirectory;
import Business.Role.AdminRole;
import Business.Role.DoctorRole;
import Business.Role.Role;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.AccessApprovalRequest;
import Business.WorkQueue.DoctorRegistrationRequest;
import Business.WorkQueue.LabTestWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Color;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hp
 */
public class RegisterDoctor extends javax.swing.JPanel {

    /**
     * Creates new form RegisterMedicalSchool
     */
    JPanel userProcessContainer;
    EcoSystem system;
    private Enterprise enterprise;
    private Organization organization;
    private UserAccount userAccount;
    private Role role;
    private String roleSelect;

    public RegisterDoctor(JPanel userProcessContainer, EcoSystem system, Role role, String roleSelect) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        this.role = role;
        this.roleSelect = roleSelect;
        populateNetworkComboBox();

    }

    private void populateNetworkComboBox() {
        networkJComboBox.removeAllItems();
        for (Network network : system.getNetworkList()) {
            networkJComboBox.addItem(network);
        }
    }

    private void populateEnterpriseComboBox(Network n) {
        enterpriseTypeJComboBox.removeAllItems();
        for (Enterprise enter : n.getEnterpriseDirectory().getEnterpriseList()) {
            enterpriseTypeJComboBox.addItem(enter);

        }
    }

    private void create(Enterprise ent, Organization org) {
        Employee empDoctor = org.getEmployeeDirectory().createEmployee(txtFiledFname.getText(), null, null, networkJComboBox.getSelectedItem().toString(), ent.getEnterpriseType().toString());
        UserAccount ua = org.getUserAccountDirectory().createEmployeeAccount(userNameTxt.getText(), pwsTxt.getText(), empDoctor, role);
        System.out.println("Test");
        AccessApprovalRequest request = new AccessApprovalRequest();
        request.setRole(roleSelect);
        request.setSender(ua);
        request.setStatus("Pending");

        for (UserAccount u : system.getUserAccountDirectory().getUserAccountList()) {
            if (u.getUsername().equals("sysadmin")) {
                u.getWorkQueue().getWorkRequestList().add(request);
            }

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<String>();
        jLabel1 = new javax.swing.JLabel();
        txtFiledFname = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        textFieldLname = new javax.swing.JTextField();
        txtFieldSSN = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        registerBtn = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel8 = new javax.swing.JLabel();
        userNameTxt = new javax.swing.JTextField();
        pwsTxt = new javax.swing.JPasswordField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        networkJComboBox = new javax.swing.JComboBox();
        enterpriseTypeJComboBox = new javax.swing.JComboBox();
        backBtn = new javax.swing.JButton();
        txtfieldRetype = new javax.swing.JPasswordField();
        jLabel11 = new javax.swing.JLabel();
        userNameMsg2 = new javax.swing.JLabel();
        userNameMsg1 = new javax.swing.JLabel();
        textFieldept = new javax.swing.JTextField();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 255, 204), 5));
        setMaximumSize(new java.awt.Dimension(602, 390));
        setPreferredSize(new java.awt.Dimension(800, 400));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 51));
        jLabel1.setText("Doctor Registration");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(346, 113, 244, 36));
        add(txtFiledFname, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 220, 200, 30));

        jLabel2.setText("First Name:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 220, 105, 30));

        jLabel3.setText("Last Name:");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 220, 81, 30));

        jLabel4.setText("Department: ");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 270, 108, 30));

        jLabel5.setText("Employee Id");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 320, 108, 30));
        add(textFieldLname, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 220, 207, 30));
        add(txtFieldSSN, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 320, 200, 30));

        jLabel6.setText("Region:");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 370, 108, -1));

        registerBtn.setText("Register");
        registerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                registerBtnActionPerformed(evt);
            }
        });
        add(registerBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 530, 101, -1));

        jLabel7.setText("Select Provider:");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 410, 121, -1));

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);
        add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 270, 10, 180));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 102, 51));
        jLabel8.setText("Create:");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(583, 257, 150, 30));

        userNameTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userNameTxtActionPerformed(evt);
            }
        });
        add(userNameTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 296, 140, 30));
        add(pwsTxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 360, 139, 30));

        jLabel9.setText("Password:");
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 360, 89, 30));

        jLabel10.setText("User Name:");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(583, 296, 131, 30));

        networkJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        networkJComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                networkJComboBoxActionPerformed(evt);
            }
        });
        add(networkJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 370, 134, 30));

        enterpriseTypeJComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        add(enterpriseTypeJComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 410, 134, 30));

        backBtn.setText("<< Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });
        add(backBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 530, -1, -1));
        add(txtfieldRetype, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 400, 139, -1));

        jLabel11.setText("Re-type password:");
        add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 410, -1, -1));
        add(userNameMsg2, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 334, 139, 30));
        add(userNameMsg1, new org.netbeans.lib.awtextra.AbsoluteConstraints(869, 296, 139, 30));
        add(textFieldept, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 270, 200, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void registerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_registerBtnActionPerformed
        // TODO add your handling code here:
        if (txtFiledFname.getText().isEmpty() && txtFieldSSN.getText().isEmpty()
                && textFieldLname.getText().isEmpty() && textFieldept.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please fill mandatory fields");
        } else {
            Enterprise ent = (Enterprise) enterpriseTypeJComboBox.getSelectedItem();
            if (ent.getOrganizationDirectory().getOrganizationList().isEmpty()) {
                Organization org = ent.getOrganizationDirectory().createOrganization(roleSelect);
                create(ent, org);
            } else {
                for(Organization o : ent.getOrganizationDirectory().getOrganizationList()){
                    if(o.getType().Doctor==null){
                        Organization org = ent.getOrganizationDirectory().createOrganization(Doctor.toString());
                        create(ent, org);
                    }else{
                        Organization org = ent.getOrganizationDirectory().createOrganization(o.getType().Lab.toString());
                        create(ent, org);
                    }
                }
            }
//            for (Organization o : ent.getOrganizationDirectory().getOrganizationList()) {
//                System.out.println("hi");
//                if (o.getType().equals(Doctor)) {
//                    System.out.println("hi");
//                    if (roleSelect.equals("Doctor")) {
//                        Organization org = ent.getOrganizationDirectory().createOrganization(roleSelect);
//
//                    } else {
//                        Employee empDoctor = o.getEmployeeDirectory().createEmployee(txtFiledFname.getText(), null, null, networkJComboBox.getSelectedItem().toString(), ent.getEnterpriseType().toString());
//                        UserAccount ua = o.getUserAccountDirectory().createEmployeeAccount(userNameTxt.getText(), pwsTxt.getText(), empDoctor, role);
//                        System.out.println("Test");
//                        AccessApprovalRequest request = new AccessApprovalRequest();
//                        request.setRole(roleSelect);
//                        request.setSender(ua);
//                        request.setStatus("Pending");
//
//                        for (UserAccount u : system.getUserAccountDirectory().getUserAccountList()) {
//                            if (u.getUsername().equals("sysadmin")) {
//                                u.getWorkQueue().getWorkRequestList().add(request);
//                            }
//
//                        }
//                    }
//                }
//
//            }
//            UserAccount account = system.getUserAccountDirectory().createEmployeeAccount(userNameTxt.getText(), pwsTxt.getText(), empDoctor, new DoctorRole());

            JOptionPane.showMessageDialog(null, "Request successfully sent to provider \n Your status is Pending");

        }
    }//GEN-LAST:event_registerBtnActionPerformed

    private void userNameTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userNameTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userNameTxtActionPerformed

    private void networkJComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_networkJComboBoxActionPerformed
        // TODO add your handling code here:
        Network network = (Network) networkJComboBox.getSelectedItem();
        if (network != null) {
            populateEnterpriseComboBox(network);
        }
    }//GEN-LAST:event_networkJComboBoxActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_backBtnActionPerformed

    private void txtfieldRetypeKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtfieldRetypeKeyTyped
        // TODO add your handling code here:
        checkForButtonVisibility();
        String check = "" + evt.getKeyChar();
        String compare = txtfieldRetype.getText();
        if (!check.isEmpty()) {
            compare += check;
        }
        if (pwsTxt.getText().equals(compare)
                && userNameMsg2.getText().equals("Available")) {
            registerBtn.setEnabled(true);
            txtfieldRetype.setBackground(Color.white);
        } else {
            registerBtn.setEnabled(false);
            txtfieldRetype.setBackground(Color.red);
        }


    }//GEN-LAST:event_txtfieldRetypeKeyTyped

    private void userNameTxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_userNameTxtKeyReleased
        // TODO add your handling code here:
        userNameMsg1.setText("");
        userNameMsg2.setText("");
        for (UserAccount ua : system.getUserAccountDirectory().getUserAccountList()) {
            if (ua.getUsername().equalsIgnoreCase(userNameTxt.getText())) {
                System.out.println(ua.getUsername());
                userNameMsg1.setText("Username is not available");
                userNameMsg2.setText("");
            } else {
                userNameMsg1.setText("");
                userNameMsg2.setText("Available");
            }
        }
    }//GEN-LAST:event_userNameTxtKeyReleased
    public boolean passwordPatternCorrect() {
        Pattern p = Pattern.compile("^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%^&+=])(?=\\S+$).{4,}$");
        Matcher m = p.matcher(pwsTxt.getText());
        boolean b = m.matches();
        if (b == true) {
            System.out.println("There is special character in my string");
            return false;
        } else {
            System.out.println("There is no speacial character");
            return true;
        }

    }

    public void checkForButtonVisibility() {
        if (!userNameTxt.getText().isEmpty()
                && !pwsTxt.getText().isEmpty()
                && !txtfieldRetype.getText().isEmpty()) {
            registerBtn.setEnabled(true);
        } else {
            registerBtn.setEnabled(false);
        }

    }

    private void initialize() {
        checkForButtonVisibility();
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JComboBox enterpriseTypeJComboBox;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JComboBox networkJComboBox;
    private javax.swing.JPasswordField pwsTxt;
    private javax.swing.JButton registerBtn;
    private javax.swing.JTextField textFieldLname;
    private javax.swing.JTextField textFieldept;
    private javax.swing.JTextField txtFieldSSN;
    private javax.swing.JTextField txtFiledFname;
    private javax.swing.JPasswordField txtfieldRetype;
    private javax.swing.JLabel userNameMsg1;
    private javax.swing.JLabel userNameMsg2;
    private javax.swing.JTextField userNameTxt;
    // End of variables declaration//GEN-END:variables
}
