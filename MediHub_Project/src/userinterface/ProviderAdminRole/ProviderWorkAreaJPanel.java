package userinterface.ProviderAdminRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.OrganQueue.OrganRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Color;
import javax.swing.BorderFactory;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;
import userinterface.ProviderAdminRole.ReviewRegistrationJPanel;

/**
 *
 * @author raunak
 */
public class ProviderWorkAreaJPanel extends javax.swing.JPanel {

    JPanel userProcessContainer;
    Enterprise enterprise;
    UserAccount userAccount;
    EcoSystem ecoSystem;

    /**
     * Creates new form AdminWorkAreaJPanel
     */
    public ProviderWorkAreaJPanel(JPanel userProcessContainer, Enterprise enterprise, UserAccount userAccount, EcoSystem ecoSystem) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.userAccount = userAccount;
        this.ecoSystem = ecoSystem;
        valueLabel.setText(enterprise.getName());
        populateOrganReqTable();
        populateAccessRequestTbl();

    }

    public void populateAccessRequestTbl() {
        DefaultTableModel model = (DefaultTableModel) accessRequestTbl.getModel();

        model.setRowCount(0);
        for (WorkRequest request : userAccount.getWorkQueue().getWorkRequestList()) {
            Object[] row = new Object[4];
            row[0] = request;
            row[1] = request.getRole();
            row[2] = request.getStatus();

            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     *
     */
    public void populateOrganReqTable() {
        DefaultTableModel model2 = (DefaultTableModel) OrganTable.getModel();
        model2.setRowCount(0);
        for (WorkRequest req : userAccount.getWorkQueue().getOrganreqlist()) {
            Object[] row = new Object[6];
            row[0] = req;
            //row[1] = req;
            row[3] = req.getSender();
            //row[5] = req.getStatus();
            model2.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        manageOrganizationJButton = new javax.swing.JButton();
        enterpriseLabel = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        accessRequestTbl = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        BtnReview = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        OrganTable = new javax.swing.JTable();
        valueLabel = new javax.swing.JLabel();
        organRqstBtn = new javax.swing.JButton();

        setLayout(null);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("My Work Area - Adminstrative Role");
        add(jLabel1);
        jLabel1.setBounds(164, 129, 418, 29);

        manageOrganizationJButton.setText("Manage Organization");
        manageOrganizationJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manageOrganizationJButtonActionPerformed(evt);
            }
        });
        add(manageOrganizationJButton);
        manageOrganizationJButton.setBounds(390, 220, 181, 29);

        enterpriseLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        enterpriseLabel.setText("EnterPrise :");
        add(enterpriseLabel);
        enterpriseLabel.setBounds(164, 179, 120, 30);

        accessRequestTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sender Name", "Role", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(accessRequestTbl);
        if (accessRequestTbl.getColumnModel().getColumnCount() > 0) {
            accessRequestTbl.getColumnModel().getColumn(0).setResizable(false);
            accessRequestTbl.getColumnModel().getColumn(1).setResizable(false);
            accessRequestTbl.getColumnModel().getColumn(2).setResizable(false);
        }

        add(jScrollPane3);
        jScrollPane3.setBounds(164, 477, 418, 148);

        jLabel2.setText("Pending request for Access :");
        add(jLabel2);
        jLabel2.setBounds(164, 445, 202, 20);
        add(jSeparator1);
        jSeparator1.setBounds(164, 417, 418, 10);

        BtnReview.setText("Review");
        BtnReview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnReviewActionPerformed(evt);
            }
        });
        add(BtnReview);
        BtnReview.setBounds(498, 629, 84, 30);

        OrganTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Organ", "qty", "Sender", "Receiver", "Status"
            }
        ));
        jScrollPane1.setViewportView(OrganTable);

        add(jScrollPane1);
        jScrollPane1.setBounds(160, 280, 420, 103);
        add(valueLabel);
        valueLabel.setBounds(320, 180, 120, 30);

        organRqstBtn.setText("Organ Requests");
        organRqstBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                organRqstBtnActionPerformed(evt);
            }
        });
        add(organRqstBtn);
        organRqstBtn.setBounds(393, 180, 180, 29);
    }// </editor-fold>//GEN-END:initComponents

    private void userJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userJButtonActionPerformed
        // TODO add your handling code here:
        ManageUserAccountJPanel muajp = new ManageUserAccountJPanel(userProcessContainer, enterprise);
        userProcessContainer.add("ManageUserAccountJPanel", muajp);

        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_userJButtonActionPerformed


    private void manageOrganizationJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manageOrganizationJButtonActionPerformed

        ManageOrganizationJPanel manageOrganizationJPanel = new ManageOrganizationJPanel(userProcessContainer, enterprise.getOrganizationDirectory());
        userProcessContainer.add("manageOrganizationJPanel", manageOrganizationJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_manageOrganizationJButtonActionPerformed

    private void BtnReviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnReviewActionPerformed
        // TODO add your handling code here:
        int row = accessRequestTbl.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        WorkRequest request = (WorkRequest) accessRequestTbl.getValueAt(row, 0);
        UserAccount us = request.getSender();
        //        UserAccount us = (UserAccount)accessRequestTbl.getValueAt(row, 0);
        ReviewRegistrationJPanel reviewRegistrationJPanel = new ReviewRegistrationJPanel(userProcessContainer, ecoSystem, us, userAccount);
        userProcessContainer.add("ReviewRegistrationJPanel", reviewRegistrationJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);

    }//GEN-LAST:event_BtnReviewActionPerformed

    private void statsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statsBtnActionPerformed
        // TODO add your handling code here:
        pieChart();
    }//GEN-LAST:event_statsBtnActionPerformed

    private void organRqstBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_organRqstBtnActionPerformed
        // TODO add your handling code here:
        userProcessContainer.add("manageOrganizationJPanel", new OrganRequestJPanel(userProcessContainer, enterprise, userAccount, ecoSystem));
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
        
    }//GEN-LAST:event_organRqstBtnActionPerformed

    public void pieChart() {
        DefaultPieDataset pieDataset = new DefaultPieDataset();
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();

        int ntwrkNbr = 0;
        int entNbr = 0;
        int custNbr = ecoSystem.getCustomerList().size();
        int orgNbr = 0;
        for (Network n : ecoSystem.getNetworkList()) {
            ntwrkNbr++;
//            entNbr = n.getEnterpriseDirectory().getEnterpriseList().size();
            for (Enterprise e : n.getEnterpriseDirectory().getEnterpriseList()) {
                entNbr++;
                for (Organization o : e.getOrganizationDirectory().getOrganizationList()) {
                    orgNbr++;
                }
            }
        }
        pieDataset.setValue("Networks", ntwrkNbr);
        pieDataset.setValue("Enterprises", entNbr);
        pieDataset.setValue("Customer", custNbr);
        pieDataset.setValue("Organisation", orgNbr);
        System.out.println(ntwrkNbr + " " + entNbr + " " + orgNbr + " " + custNbr);

        dataset.setValue(ntwrkNbr, "Number", "Networks");
        dataset.setValue(entNbr, "Number", "Enterprises");
        dataset.setValue(orgNbr, "Number", "Organizations");
        dataset.setValue(custNbr, "Number", "Customers");

        JFreeChart chart = ChartFactory.createPieChart("Pie Diagram", pieDataset);
        PiePlot p = (PiePlot) chart.getPlot();

        JFreeChart chartBar = ChartFactory.createBarChart("Number of Accounts", "Accounts", "Numbers", dataset, PlotOrientation.VERTICAL, false, true, false);
        ChartFrame frame = new ChartFrame("Pie Frame", chartBar);
        frame.setVisible(true);
        frame.setSize(450, 500);

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnReview;
    private javax.swing.JTable OrganTable;
    private javax.swing.JTable accessRequestTbl;
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JButton manageOrganizationJButton;
    private javax.swing.JButton organRqstBtn;
    private javax.swing.JLabel valueLabel;
    // End of variables declaration//GEN-END:variables

}
