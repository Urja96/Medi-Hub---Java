package userinterface.ProviderAdminRole;

import Business.AppoontmentQueue.AppointmentRequest;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.OrganQueue.OrganRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Stroke;
import java.util.HashMap;
import java.util.Iterator;
import java.util.Map;
import java.util.Set;
import javax.swing.BorderFactory;
import javax.swing.JFrame;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.general.DefaultPieDataset;
import userinterface.ProviderAdminRole.ReviewRegistrationJPanel;

/**
 *
 * @author raunak
 */


public class ProviderWorkAreaJPanel extends javax.swing.JPanel {

    JPanel userProcessContainer;
    Enterprise enterprise;
    UserAccount userAccount;
    EcoSystem ecoSystem;

    /**
     * Creates new form AdminWorkAreaJPanel
     */
    public ProviderWorkAreaJPanel(JPanel userProcessContainer, Enterprise enterprise, UserAccount userAccount, EcoSystem ecoSystem) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.userAccount = userAccount;
        this.ecoSystem = ecoSystem;
        valueLabel.setText(enterprise.getName());
        populateOrganReqTable();
        userName.setText(userAccount.getUsername());
        Calendar cal = Calendar.getInstance();
        SimpleDateFormat sdf = new SimpleDateFormat("dd/mm/yyyy, HH:mm:ss");
        date.setText(sdf.format(cal.getTime()));
        populateAccessRequestTbl();

    }

    public void populateAccessRequestTbl() {
        DefaultTableModel model = (DefaultTableModel) accessRequestTbl.getModel();

        model.setRowCount(0);
        for (WorkRequest request : userAccount.getWorkQueue().getWorkRequestList()) {
            Object[] row = new Object[4];
            row[0] = request;
            row[1] = request.getRole();
            row[2] = request.getStatus();

            model.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     *
     */
    public void populateOrganReqTable() {
        DefaultTableModel model2 = (DefaultTableModel) OrganTable.getModel();
        model2.setRowCount(0);
//        for (WorkRequest req : userAccount.getWorkQueue().getOrganreqlist()) {
//            Object[] row = new Object[6];
//            row[0] = req;
//            //row[1] = req;
//            row[3] = req.getSender();
//            //row[5] = req.getStatus();
//            model2.addRow(row);
     }
//    }


    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        manageOrganizationJButton = new javax.swing.JButton();
        enterpriseLabel = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        accessRequestTbl = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        BtnReview = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        OrganTable = new javax.swing.JTable();
        valueLabel = new javax.swing.JLabel();
        organRqstBtn = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        userName = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        welcomeTxt = new javax.swing.JLabel();
        date = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        BtnStats = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("My Work Area - Adminstrative Role");

        manageOrganizationJButton.setText("Manage Organization");
        manageOrganizationJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manageOrganizationJButtonActionPerformed(evt);
            }
        });

        enterpriseLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        enterpriseLabel.setText("EnterPrise :");

        accessRequestTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sender Name", "Role", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(accessRequestTbl);
        if (accessRequestTbl.getColumnModel().getColumnCount() > 0) {
            accessRequestTbl.getColumnModel().getColumn(0).setResizable(false);
            accessRequestTbl.getColumnModel().getColumn(1).setResizable(false);
            accessRequestTbl.getColumnModel().getColumn(2).setResizable(false);
        }

        jLabel2.setText("Pending request for Access :");

        BtnReview.setText("Review");
        BtnReview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnReviewActionPerformed(evt);
            }
        });

        OrganTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Organ", "qty", "Sender", "Receiver", "Status"
            }
        ));
        jScrollPane1.setViewportView(OrganTable);

        organRqstBtn.setText("Organ Requests");
        organRqstBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                organRqstBtnActionPerformed(evt);
            }
        });

        jLabel6.setBackground(new java.awt.Color(0, 102, 0));
        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 102, 51));
        jLabel6.setText("Logged as: ");

        jLabel3.setBackground(new java.awt.Color(0, 102, 0));
        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 102, 51));
        jLabel3.setText("Date & Time:");

        userName.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        jLabel7.setBackground(new java.awt.Color(0, 102, 0));
        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 102, 51));
        jLabel7.setText("Welcome Customer :");

        welcomeTxt.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        welcomeTxt.setForeground(new java.awt.Color(0, 204, 0));

        date.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        BtnStats.setText("Stats");
        BtnStats.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnStatsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(164, 164, 164)
                .addComponent(enterpriseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addComponent(organRqstBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(valueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(BtnStats)
                .addGap(184, 184, 184))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(164, 164, 164)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(390, 390, 390)
                        .addComponent(manageOrganizationJButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(160, 160, 160)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(164, 164, 164)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 418, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(164, 164, 164)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(164, 164, 164)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 418, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(498, 498, 498)
                        .addComponent(BtnReview, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(welcomeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(106, 106, 106)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(userName, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(date, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 892, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(userName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel7)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(date, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(welcomeTxt, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(enterpriseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(organRqstBtn)
                                .addComponent(BtnStats))
                            .addComponent(valueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(10, 10, 10)
                .addComponent(manageOrganizationJButton)
                .addGap(31, 31, 31)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(12, 12, 12)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(BtnReview, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void userJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userJButtonActionPerformed
        // TODO add your handling code here:
        ManageUserAccountJPanel muajp = new ManageUserAccountJPanel(userProcessContainer, enterprise);
        userProcessContainer.add("ManageUserAccountJPanel", muajp);

        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_userJButtonActionPerformed


    private void manageOrganizationJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manageOrganizationJButtonActionPerformed


    }//GEN-LAST:event_manageOrganizationJButtonActionPerformed

    private void BtnReviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnReviewActionPerformed
        // TODO add your handling code here:
        int row = accessRequestTbl.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        WorkRequest request = (WorkRequest) accessRequestTbl.getValueAt(row, 0);
        UserAccount us = request.getSender();
        //        UserAccount us = (UserAccount)accessRequestTbl.getValueAt(row, 0);
        ReviewRegistrationJPanel reviewRegistrationJPanel = new ReviewRegistrationJPanel(userProcessContainer, ecoSystem, us, userAccount);
        userProcessContainer.add("ReviewRegistrationJPanel", reviewRegistrationJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);

    }//GEN-LAST:event_BtnReviewActionPerformed

    private void statsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statsBtnActionPerformed
        // TODO add your handling code here:
        pieChart();
    }//GEN-LAST:event_statsBtnActionPerformed

    private void organRqstBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_organRqstBtnActionPerformed
        // TODO add your handling code here:
        userProcessContainer.add("manageOrganizationJPanel", new OrganRequestJPanel(userProcessContainer, enterprise, userAccount, ecoSystem));
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);

    }//GEN-LAST:event_organRqstBtnActionPerformed

    private void BtnStatsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnStatsActionPerformed
        // TODO add your handling code here:
        Map<String, Double> doctorRating = new HashMap<>();
        for (Network n : ecoSystem.getNetworkList()) {
            //System.out.println("Inside network list");
            for (Enterprise e : n.getEnterpriseDirectory().getEnterpriseList()) {
                //System.out.println("Inside Enteprise list");
                if (this.enterprise.equals(e)) {
                    for (Organization o : e.getOrganizationDirectory().getOrganizationList()) {
                        //System.out.println("Inside organization list");
                        for (UserAccount acc : o.getUserAccountDirectory().getUserAccountList()) {
                            //System.out.println("Inside organization's user account list");
                            if (acc.getRole().toString().equals("Business.Role.DoctorRole")) {
                                //System.out.println("Inside doctor organization ");
                                //for (int i=0; i< o.getUserAccountDirectory().getUserAccountList().size(); i++){
                                doctorRating.put(acc.getEmployee().getName(), new Double(acc.getEmployee().getRating()));

                                //}
                            }

                        }
                    }
                }
            }
        }

        DefaultCategoryDataset dcd = new DefaultCategoryDataset();
        Set keys = doctorRating.keySet();
        Iterator docRatingItr = keys.iterator();

        while (docRatingItr.hasNext()) {
            String doctorName = (String) docRatingItr.next();
            double rating = (double) doctorRating.get(doctorName);
            dcd.setValue(rating, "Doctor rating", doctorName);
        }
        JFreeChart jchart = ChartFactory.createBarChart("Doctor Ratings", "Doctors", "Ratings", dcd, PlotOrientation.VERTICAL, true, true, false);

        CategoryPlot plot = jchart.getCategoryPlot();
        plot.setRangeMinorGridlinePaint(Color.black);

        ChartFrame chartFrm = new ChartFrame("Doctor Rating", jchart, true);
        chartFrm.setVisible(true);
        chartFrm.setSize(500, 400);

        //JFreeChart jchart = ChartFactory.createBarChart("Doctor Ratings", "Doctors", "Ratings", dcd, PlotOrientation.VERTICAL, true, true, false);

    }//GEN-LAST:event_BtnStatsActionPerformed

    public void pieChart() {
        DefaultPieDataset pieDataset = new DefaultPieDataset();
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();

        int ntwrkNbr = 0;
        int entNbr = 0;
        int custNbr = ecoSystem.getCustomerList().size();
        int orgNbr = 0;
        for (Network n : ecoSystem.getNetworkList()) {
            ntwrkNbr++;
//            entNbr = n.getEnterpriseDirectory().getEnterpriseList().size();
            for (Enterprise e : n.getEnterpriseDirectory().getEnterpriseList()) {
                entNbr++;
                for (Organization o : e.getOrganizationDirectory().getOrganizationList()) {
                    orgNbr++;
                }
            }
        }
        pieDataset.setValue("Networks", ntwrkNbr);
        pieDataset.setValue("Enterprises", entNbr);
        pieDataset.setValue("Customer", custNbr);
        pieDataset.setValue("Organisation", orgNbr);
        System.out.println(ntwrkNbr + " " + entNbr + " " + orgNbr + " " + custNbr);

        dataset.setValue(ntwrkNbr, "Number", "Networks");
        dataset.setValue(entNbr, "Number", "Enterprises");
        dataset.setValue(orgNbr, "Number", "Organizations");
        dataset.setValue(custNbr, "Number", "Customers");

        JFreeChart chart = ChartFactory.createPieChart("Pie Diagram", pieDataset);
        PiePlot p = (PiePlot) chart.getPlot();

        JFreeChart chartBar = ChartFactory.createBarChart("Number of Accounts", "Accounts", "Numbers", dataset, PlotOrientation.VERTICAL, false, true, false);
        ChartFrame frame = new ChartFrame("Pie Frame", chartBar);
        frame.setVisible(true);
        frame.setSize(450, 500);

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnReview;
    private javax.swing.JButton BtnStats;
    private javax.swing.JTable OrganTable;
    private javax.swing.JTable accessRequestTbl;
    private javax.swing.JLabel date;
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JButton manageOrganizationJButton;
    private javax.swing.JButton organRqstBtn;
    private javax.swing.JLabel userName;
    private javax.swing.JLabel valueLabel;
    private javax.swing.JLabel welcomeTxt;
    // End of variables declaration//GEN-END:variables

}
